/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.zcomapproach.garden.peony.search;

import com.zcomapproach.garden.peony.view.PeonyFaceController;
import com.zcomapproach.garden.peony.search.controllers.PeonySearchResultPaneController;
import com.zcomapproach.garden.peony.PeonyTopComponent;
import com.zcomapproach.garden.peony.search.controllers.PeonySearchPaneController;
import com.zcomapproach.garden.persistence.peony.data.PeonySearchResult;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Non-singleton top component which displays either search-engine, i.e. search 
 * criteria for users to input or search-result of the search action done by users.
 */
@TopComponent.Description(
        preferredID = "PeonySearchResultTopComponent",
        iconBase = "com/zcomapproach/garden/peony/resources/images/table_tab_search.png",
        persistenceType = TopComponent.PERSISTENCE_NEVER
)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@Messages({
    "CTL_PeonySearchResultTopComponent=Peony Search Result",
    "HINT_PeonySearchResultTopComponent=This is a Peony search result window"
})
public final class PeonySearchResultTopComponent extends PeonyTopComponent {
    
    private PeonyFaceController targetPeonyFaceController;
    
    public PeonySearchResultTopComponent() {
        initComponents();
        setName(Bundle.CTL_PeonySearchResultTopComponent());
        setToolTipText(Bundle.HINT_PeonySearchResultTopComponent());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    public void initializePeonySearchResultTopComponent(final PeonySearchResult searchResultObj) {
        if (searchResultObj == null){
            targetPeonyFaceController = new PeonySearchPaneController();
            targetPeonyFaceController.addPeonyFaceEventListener(this);
            super.launchPeonyTopComponent(getName());
        }else{
            targetPeonyFaceController = new PeonySearchResultPaneController(searchResultObj);
            super.launchPeonyTopComponent(searchResultObj.getSearchResultTitle());
        }
        
    }

    @Override
    protected PeonyFaceController createPeonyFaceController() {
        if (getPeonyFaceController() == null){
            return targetPeonyFaceController;
        }
        return getPeonyFaceController();
    }

}
