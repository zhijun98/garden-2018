/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.zcomapproach.garden.peony.customer;

import com.zcomapproach.garden.peony.PeonyTopComponent;
import com.zcomapproach.garden.peony.customer.controllers.TulipCustomerProfileController;
import com.zcomapproach.garden.peony.view.PeonyFaceController;
import com.zcomapproach.garden.persistence.entity.G02TulipUser;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@TopComponent.Description(
        preferredID = "TulipCustomerProfileTopComponent",
        iconBase = "com/zcomapproach/garden/peony/resources/images/user.png",
        persistenceType = TopComponent.PERSISTENCE_NEVER
)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@Messages({
    "CTL_TulipCustomerProfileTopComponent=Tulip Mobile Customer",
    "HINT_TulipCustomerProfileTopComponent=This is a TulipCustomerProfile window"
})
public final class TulipCustomerProfileTopComponent extends PeonyTopComponent {
    
    private TulipCustomerProfileController targetTulipCustomerProfileController;
    private G02TulipUser targetTulipUser;

    public TulipCustomerProfileTopComponent() {
        initComponents();
        setName(Bundle.CTL_TulipCustomerProfileTopComponent());
        setToolTipText(Bundle.HINT_TulipCustomerProfileTopComponent());

    }

    @Override
    public void launchPeonyTopComponent(String windowName) {
        throw new UnsupportedOperationException("Not supported for this top component instance.");
    }
    
    public void launchTulipCustomerProfileTopComponent(G02TulipUser targetTulipUser) {
        this.targetTulipUser = targetTulipUser;
        if (targetTulipUser == null){
            return;
        }else{
            super.launchPeonyTopComponent("Tulip User: " + targetTulipUser.getUsername());
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    @Override
    protected PeonyFaceController createPeonyFaceController() {
        if (getPeonyFaceController() == null){
            targetTulipCustomerProfileController = new TulipCustomerProfileController(targetTulipUser);
            targetTulipCustomerProfileController.addPeonyFaceEventListener(this);
            return targetTulipCustomerProfileController;
        }
        return getPeonyFaceController();
    }

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }
}
