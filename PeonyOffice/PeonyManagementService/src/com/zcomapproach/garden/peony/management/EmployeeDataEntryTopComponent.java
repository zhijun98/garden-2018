/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.zcomapproach.garden.peony.management;

import com.zcomapproach.commons.ZcaValidator;
import com.zcomapproach.garden.peony.PeonyTopComponent;
import com.zcomapproach.garden.peony.view.events.CloseTopComponentRequest;
import com.zcomapproach.garden.peony.view.events.PeonyFaceEvent;
import com.zcomapproach.garden.peony.management.events.PeonyEmployeeDeleted;
import com.zcomapproach.garden.peony.management.events.PeonyEmployeeSaved;
import com.zcomapproach.garden.peony.view.PeonyFaceController;
import com.zcomapproach.garden.peony.view.controllers.PeonyPersonalProfileController;
import com.zcomapproach.garden.persistence.peony.PeonyEmployee;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Non-singleton top component which displays a specific employee's data entry form.
 */
@TopComponent.Description(
        preferredID = "EmployeeDataEntryTopComponent",
        iconBase = "com/zcomapproach/garden/peony/resources/images/employee.png",
        persistenceType = TopComponent.PERSISTENCE_NEVER
)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@Messages({
    "CTL_EmployeeDataEntryTopComponent=Employee Data Entry",
    "HINT_EmployeeDataEntryTopComponent=This is a data entry window for employees"
})
public final class EmployeeDataEntryTopComponent extends PeonyTopComponent {
    
    private PeonyEmployee targetPeonyEmployee;

    public EmployeeDataEntryTopComponent() {
        //initComponents();
        setName(Bundle.CTL_EmployeeDataEntryTopComponent());
        setToolTipText(Bundle.HINT_EmployeeDataEntryTopComponent());

    }

    @Override
    public void peonyFaceEventHappened(PeonyFaceEvent event) {
        if (event instanceof PeonyEmployeeSaved){
            
        }else if (event instanceof PeonyEmployeeDeleted){
            super.peonyFaceEventHappened(new CloseTopComponentRequest());
        }else{
            super.peonyFaceEventHappened(event);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }
    
    public void launchEmployeeDataEntryTopComponent(PeonyEmployee targetPeonyEmployee){
        this.targetPeonyEmployee = targetPeonyEmployee;
        if (ZcaValidator.isNullEmpty(targetPeonyEmployee.getPeonyUserFullName())){
            super.launchPeonyTopComponent("Employee Data Entry");
        }else{
            super.launchPeonyTopComponent("Employee: " + targetPeonyEmployee.getPeonyUserFullName());
        }
    }

    /**
     * this method disabled users to call directly from this top component instance
     */
    @Override
    public void launchPeonyTopComponent(String windowName) {
        throw new UnsupportedOperationException("Not supported for this top component instance.");
    }

    @Override
    protected PeonyFaceController createPeonyFaceController() {
        if (getPeonyFaceController() == null){
            return new PeonyPersonalProfileController(targetPeonyEmployee);
        }
        return getPeonyFaceController();
    }
}
