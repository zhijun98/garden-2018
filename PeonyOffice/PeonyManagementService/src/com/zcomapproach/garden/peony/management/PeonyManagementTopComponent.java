/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.zcomapproach.garden.peony.management;

import com.zcomapproach.garden.peony.view.PeonyFaceController;
import com.zcomapproach.garden.peony.management.controllers.PeonyManagementPanelController;
import com.zcomapproach.garden.peony.PeonyTopComponent;
import com.zcomapproach.garden.peony.utils.PeonyFaceUtils;
import com.zcomapproach.garden.persistence.peony.PeonyEmployee;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.awt.ActionReferences;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Singleton top component which displays management control panel.
 */
@TopComponent.Description(
        preferredID = "PeonyManagementTopComponent",
        iconBase = "com/zcomapproach/garden/peony/resources/images/management.png",
        persistenceType = TopComponent.PERSISTENCE_NEVER
)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", 
          id = "com.zcomapproach.garden.peony.management.PeonyManagementTopComponent")
@ActionReferences({
    @ActionReference(path = "Menu/Tools", position = 0),
    @ActionReference(path = "Toolbars/File", position = 2000)
})
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_PeonyManagementAction",
        preferredID = "PeonyManagementTopComponent"
)
@Messages({
    "CTL_PeonyManagementAction=Peony Management",
    "CTL_PeonyManagementTopComponent=Peony Management",
    "HINT_PeonyManagementTopComponent=Human Resource Management for Business"
})
public final class PeonyManagementTopComponent extends PeonyTopComponent {
    
    public PeonyManagementTopComponent() {
        //initComponents();
        setName(Bundle.CTL_PeonyManagementTopComponent());
        setToolTipText(Bundle.HINT_PeonyManagementTopComponent());
        
        super.launchPeonyTopComponent(getName());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    public void popupEmployeeWorkLogsTopComponent(final PeonyEmployee aPeonyEmployee) {
        PeonyFaceController aPeonyFaceController = getPeonyFaceController();
        if (aPeonyFaceController instanceof PeonyManagementPanelController){
            ((PeonyManagementPanelController)aPeonyFaceController).displayEmployeeWorkLogsTopComponent(aPeonyEmployee);
        }else{
            PeonyFaceUtils.displayErrorMessageDialog("Cannot display work logs for now.");
        }
    }
    
    public void displayEmployeeDataEntryTopComponent(final PeonyEmployee aPeonyEmployee){
        PeonyFaceController aPeonyFaceController = getPeonyFaceController();
        if (aPeonyFaceController instanceof PeonyManagementPanelController){
            ((PeonyManagementPanelController)aPeonyFaceController).popupEmployeeDataEntryTopComponent(aPeonyEmployee);
        }
    }
    
    @Override
    protected PeonyFaceController createPeonyFaceController() {
        if (getPeonyFaceController() == null){
            return new PeonyManagementPanelController();
        }
        return getPeonyFaceController();
    }
}
